<link rel="stylesheet" href="{{ 'modal.css' | asset_url }}">
<script src="{{ 'details-modal.js' | asset_url }}" defer="defer"></script>

<header class="password-header text-center">
  <div class="password-header__content container">
    <div class="logo logo--{{ section.settings.logo_position }}">
      {%- if section.settings.logo -%}
        {%- liquid
          assign logo_width = section.settings.logo_width
          if section.settings.logo.width < logo_width
            assign logo_width = section.settings.logo.width
          endif
          assign alt_text = section.settings.logo.alt | default: shop.name
        -%}
        <div class="logo__image mx-auto" style="width: {{ section.settings.logo_width | plus: 0 }}px;">
          {% render 'image',
            image: section.settings.logo,
            src_width: logo_width,
            srcset_2x: true,
            lazy_load: false,
            alt_text: alt_text
          %}
        </div>
      {%- else -%}
        <h1 class="logo__text h2">{{ shop.name }}</h1>
      {%- endif -%}
    </div>

    <password-modal class="password-login">
      <details class="details-modal">
        <summary class="details-modal__toggle inline-flex relative" aria-haspopup="dialog">
          <span class="details-modal__toggle-open inline-flex items-center pointer-events-none js-open-modal">
            {% render 'icon-padlock' %}
            {{ 'templates.password.general.login_link' | t }}
          </span>
          <span class="details-modal__toggle-close block pointer-events-none js-close-modal">
            {% render 'icon-close' %}
            <span class="visually-hidden">{{ 'accessibility.close' | t }}</span>
          </span>
        </summary>
        <div class="modal fixed top-0 left-0 w-full h-full flex items-center justify-center">
          <div class="modal__window relative bg-theme-bg text-theme-text text-start overflow-hidden has-motion" role="dialog" aria-labelledby="password-modal-heading" aria-modal="true" tabindex="-1">
            <div class="modal__content text-center">
              <h2 class="h5" id="password-modal-heading">
                {{- 'templates.password.login_form.heading' | t -}}
              </h2>

              {%- form 'storefront_password', class: 'form password-form' -%}
                <div class="form__field">
                  <label class="label visually-hidden" for="password">
                    {{- 'templates.password.login_form.password_label' | t -}}
                  </label>
                  <div class="input-with-button">
                    <input type="password"
                          class="input w-full"
                          id="password"
                          name="password"
                          placeholder="{{ 'templates.password.login_form.password_placeholder' | t }}"
                          {%- if form.errors %}
                            aria-invalid="true"
                            aria-describedby="password-form-error"
                          {%- endif %}>
                    <button class="btn btn--primary" name="commit">
                      {{- 'templates.password.login_form.submit' | t -}}
                    </button>
                  </div>
                  {%- if form.errors -%}
                    <p class="form__field-error" id="password-form-error">
                      {{ 'templates.password.login_form.error' | t }}
                    </p>
                  {%- endif -%}
                </div>
              {%- endform -%}

              <small class="password-owner">{{ 'templates.password.login_form.admin_link_html' | t }}</small>
            </div>
          </div>
        </div>
      </details>
    </password-modal>
  </div>
</header>

<script>
  customElements.whenDefined('details-modal').then(() => {
    class PasswordModal extends DetailsModal {
      constructor() {
        super();
        this.detailsModal = this.querySelector('.details-modal');
        this.input = this.querySelector('.input');

        if (this.input.matches('[aria-invalid="true"]')) {
          this.open();
          this.input.focus();
        }
      }

      handleClick(e) {
        super.handleClick(e);
        if (this.detailsModal.open) this.input.focus();
      }
    }

    customElements.define('password-modal', PasswordModal);
  });
</script>

{% schema %}
{
  "name": "Password header",
  "class": "cc-password-header",
  "settings": [
    {
      "type": "image_picker",
      "id": "logo",
      "label": "Logo"
    },
    {
      "type": "range",
      "id": "logo_width",
      "min": 50,
      "max": 250,
      "step": 10,
      "unit": "px",
      "label": "Maximum logo width",
      "info": "Height is restricted to 150px.",
      "default": 150
    },
    {
      "type": "select",
      "id": "logo_position",
      "label": "Logo position on large screens",
      "options": [
        {
          "value": "left",
          "label": "Left"
        },
        {
          "value": "center",
          "label": "Center"
        }
      ],
      "default": "center"
    }
  ]
}
{% endschema %}
